name: .NET

on:
  push:
    branches:    
      - master
    tags:        
      - v
  pull_request:
    branches:    
      - master

jobs:
  build:
    name: Build
    runs-on: windows-latest

    steps:  
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
        
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: '5.x'

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v0.9.7
        with:
          useConfigFile: true
          configFilePath: ./.github/Gitversion.yml

      - name: Display GitVersion outputs
        run: |
          echo "Major: ${{ env.GitVersion_SemVer }}"
          echo "Major: ${{ env.GitVersion_Major }}"
          echo "Minor: ${{ env.GitVersion_Minor }}"
          echo "Patch: ${{ env.GitVersion_Patch }}"
          echo "AssemblySemVer: ${{ env.GitVersion_AssemblySemVer }}"
          echo "AssemblySemFileVer: ${{ env.GitVersion_AssemblySemFileVer }}"

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"epsmae_photo-booth-dot-net" /o:"techprojects" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet restore ./src/PhotoBooth.sln
          dotnet build -c Debug -p:Version=${{ env.GitVersion_AssemblySemVer }} --no-restore ./src/PhotoBooth.sln
          dotnet test -c Debug --no-build --verbosity normal ./src/PhotoBooth.sln /p:CollectCoverage=true /p:CoverletOutputFormat=opencover --logger trx
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
            
      - name: Publish application
        run: dotnet publish ./src/PhotoBooth.Server/PhotoBooth.Server.csproj -p:Version=${{ env.GitVersion_AssemblySemVer }} -r linux-arm -c Release -o publish

      - name: Upload artefact
        uses: actions/upload-artifact@v2
        with:
         name: "PhotoBooth.Net_${{ env.GitVersion_AssemblySemVer }}"
         path: publish
         if-no-files-found: error
